# -*- coding: utf-8 -*-
"""Prob_and_rand_var.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o3W1sOUqNYrSH0h2cRncWpqW-B2AVjrN
"""

import numpy as np
import random
two_dia=0 
#two_dia is the number of cases in which the card lost is not diamond
#but the two drawn cards are diamonds
three_dia=0
#three_dia is the number of cases in which the card lost is a diamond
#and the two drawn cards are also diamond
total=0
#total is the total number of cases which is the sum of three_dia and
#two_dia
for x in range(1,500000):
  #here we give a unique number to each of the 52 cards on the deck and
  # the numbering is as shown:
  #    club:1-13
  #   spade:14-26
  #   heart:27-39
  # diamond:40-52
  #then we choose random numbers to simulate the lost card and the 2 cards chosen 
  #a is the card lost 
  #b and c are the 2 cards chosen (which are given to be diamonds)
  a=random.randint(1,52)
  b=a
  c=a
  #we eliminate the cases where b=a ,c=a and c=b because it's not allowed to choose 
  # the same card twice.
  while b==a:
    b=random.randint(1,52)
  while ((c==a)or(c==b)):
    c=random.randint(1,52)
  if ((b<=39) or (c<=39)):
    continue  #this is to remove the cases where the chosen cards are not diamonds.
    # because it is given that the chosen cards are diamonds.
  elif(a>39):
    three_dia+=1
    total+=1
  elif(a<=39):
    two_dia+=1
    total+=1
#we need the probability of last card being diamond given that other two 
#cards drawn are diamonds which is equal to
# the number of cases where all 3 cards are diamonds/ total number of cases
pr_simulation=three_dia/total
pr_theory=0.22 # this was derived in the pdf/latex.
print(pr_simulation,":",pr_theory)